export const isDebug=!1;let BASE_URL="https://flsdfl.pythonanywhere.com";isDebug?BASE_URL="http://127.0.0.1:5000":(console.log=function(){},console.error=function(){});export class UserState{constructor(t){this.uid=t.uid,this.language=t.language,this.score=t.score,this.balance=t.balance,this.reward=t.reward,this.referral=t.referral,this.tasks=t.tasks,this.bot=t.bot,this.bottombar=t.bottombar,this.tasksPage=t.tasksPage,this.leaderBoardPage=t.leaderBoardPage,this.cashOutPage=t.cashOutPage}}export async function getUserState(t,e,r,a,n,o){if(!t)return console.error("getConfig: uid is required"),null;let i=new URLSearchParams({uid:t,language:e});r&&i.append("ref",r),a&&i.append("meta",a),n&&i.append("page",n),o&&i.append("initData",o);try{let s=await fetch(`${BASE_URL}/config?${i.toString()}`,{method:"GET"});if(!s.ok){let l=await s.text();return console.error(`Get config failed: ${l}`),null}let u=await s.json();return console.log("Json data ",u),new UserState(u)}catch(c){return console.error("getConfig fetch error:",c),null}}export async function updateUserState(t,e,r){if(!t)return console.error("updateUserState: uid is required"),null;try{let a=await fetch(`${BASE_URL}/config?uid=${encodeURIComponent(t)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({score_best:e,balance:{value:r}})});if(!a.ok){let n=await a.text();return console.error(`updateUserState failed: ${n}`),null}return await a.text()}catch(o){return console.error("updateUserState fetch error:",o),null}}export async function postTransaction(t,e,r,a){if(!t)return console.error("postTransaction: uid is required"),null;if(!e)return console.error("postTransaction: tg_user_name is required"),null;if(null==r)return console.error("postTransaction: amount is required"),null;try{let n=await fetch(`${BASE_URL}/transaction?uid=${encodeURIComponent(t)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tg_user_name:e,amount:r,wallet_info:a})});if(!n.ok){let o=await n.text();return console.error(`Post transaction failed: ${o}`),null}let i=await n.json();return console.log("back response ",i),i}catch(s){return console.error("postTransaction fetch error:",s),null}}export async function postTaskComplete(t,e){if(!t)return console.error("postTaskComplete: uid is required"),null;if(!e)return console.error("postTaskComplete: task_id is required"),null;let r=new URLSearchParams({uid:t,task_id:e});try{let a=await fetch(`${BASE_URL}/task/complete?${r.toString()}`,{method:"POST"});if(!a.ok){let n=await a.text();return console.error(`Post task complete failed: ${n}`),null}return await a.text()}catch(o){return console.error("postTaskComplete fetch error:",o),null}}